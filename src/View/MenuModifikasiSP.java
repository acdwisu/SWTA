/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerModifikasiSP;
import FileIO.FileIOSegmentationPoints;
import Processor.ImageProcessor;
import java.awt.image.BufferedImage;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author acdwisu
 */
public class MenuModifikasiSP extends javax.swing.JFrame {

    private ControllerModifikasiSP controller;
    private JLabel imageViewerProcessed, imageViewerOriginal;
    
    /**
     * Creates new form MenuModifikasiSP
     */
    public MenuModifikasiSP(ControllerModifikasiSP controller) {
        initComponents();
        
        /* Set Look and Feel Swing */
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            SwingUtilities.updateComponentTreeUI(this);
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MenuModifikasiSP.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.controller = controller;
        
        BufferedImage image = new ImageProcessor().renderWordAccordingToPSPArea(this.controller.getProcessedImage(), 
                new FileIOSegmentationPoints().readSegmentationPoint(this.controller.getData().getDirektoriSps()),
                this.controller.getPspAreas());
        
        imageViewerOriginal = new JLabel();
        imageViewerOriginal.setIcon(new ImageIcon(this.controller.getOriginalImage()));
        
        imageViewerProcessed = new JLabel();
        imageViewerProcessed.setIcon(new ImageIcon(image));
        
        this.panelCitraOriginal.add(imageViewerOriginal);
        this.panelCitraProcessed.add(imageViewerProcessed);
        
        this.panelCitraOriginal.revalidate();
        this.panelCitraOriginal.repaint();
        
        this.panelCitraProcessed.revalidate();
        this.panelCitraProcessed.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        buttonTambahAreaPSp = new javax.swing.JButton();
        buttonHapusAreaPSp = new javax.swing.JButton();
        buttonSimpan = new javax.swing.JButton();
        panelCitraOriginal = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        sliderPoint2 = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPSPAreas = new javax.swing.JList<>();
        btnPSpAreaOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sliderPoint1 = new javax.swing.JSlider();
        panelCitraProcessed = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modifikasi SP");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tools"));

        buttonTambahAreaPSp.setText("Tambah Area PSP");
        buttonTambahAreaPSp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonTambahAreaPSpMouseClicked(evt);
            }
        });
        jPanel2.add(buttonTambahAreaPSp);

        buttonHapusAreaPSp.setText("Hapus Area PSP");
        buttonHapusAreaPSp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonHapusAreaPSpMouseClicked(evt);
            }
        });
        jPanel2.add(buttonHapusAreaPSp);

        buttonSimpan.setText("Simpan");
        buttonSimpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSimpanMouseClicked(evt);
            }
        });
        jPanel2.add(buttonSimpan);

        panelCitraOriginal.setBackground(new java.awt.Color(153, 153, 153));
        panelCitraOriginal.setLayout(new java.awt.GridBagLayout());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        sliderPoint2.setValue(0);
        sliderPoint2.setDoubleBuffered(true);
        sliderPoint2.setEnabled(false);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Daftar Area PSPs"));
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        listPSPAreas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listPSPAreas);

        btnPSpAreaOk.setText("Ok");
        btnPSpAreaOk.setEnabled(false);
        btnPSpAreaOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPSpAreaOkMouseClicked(evt);
            }
        });

        jLabel1.setText("Point 2");

        jLabel2.setText("Point 1");

        sliderPoint1.setValue(0);
        sliderPoint1.setDoubleBuffered(true);
        sliderPoint1.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(193, 193, 193)
                                        .addComponent(btnPSpAreaOk))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1)))
                                .addGap(0, 206, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sliderPoint2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sliderPoint1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderPoint1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderPoint2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPSpAreaOk))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addContainerGap())
        );

        panelCitraProcessed.setBackground(new java.awt.Color(153, 153, 153));
        panelCitraProcessed.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCitraProcessed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCitraOriginal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(panelCitraOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCitraProcessed, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonHapusAreaPSpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonHapusAreaPSpMouseClicked
        if(this.buttonHapusAreaPSp.isEnabled())
            this.controller.responseHapusAreaPSP();
    }//GEN-LAST:event_buttonHapusAreaPSpMouseClicked

    private void buttonSimpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSimpanMouseClicked
        if(this.buttonSimpan.isEnabled())
            this.controller.responseSimpan();
    }//GEN-LAST:event_buttonSimpanMouseClicked

    private void buttonTambahAreaPSpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonTambahAreaPSpMouseClicked
        if(this.buttonTambahAreaPSp.isEnabled())
            this.controller.responseTambahAreaPSP();
    }//GEN-LAST:event_buttonTambahAreaPSpMouseClicked

    private void btnPSpAreaOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPSpAreaOkMouseClicked
        if(this.btnPSpAreaOk.isEnabled())
            this.controller.responseOkTambahAreaPSP();
    }//GEN-LAST:event_btnPSpAreaOkMouseClicked

    public JButton getButtonHapusAreaPSp() {
        return buttonHapusAreaPSp;
    }

    public JButton getButtonSimpan() {
        return buttonSimpan;
    }

    public JButton getButtonTambahAreaPSp() {
        return buttonTambahAreaPSp;
    }

    public JPanel getPanelCitraOriginal() {
        return panelCitraOriginal;
    }

    public JPanel getPanelCitraProcessed() {
        return panelCitraProcessed;
    }

    public JList<String> getListPSPAreas() {
        return listPSPAreas;
    }

    public JSlider getSliderPoint1() {
        return sliderPoint1;
    }

    public JSlider getSliderPoint2() {
        return sliderPoint2;
    }

    public JLabel getImageViewerProcessed() {
        return imageViewerProcessed;
    }

    public JButton getBtnPSpAreaOk() {
        return btnPSpAreaOk;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPSpAreaOk;
    private javax.swing.JButton buttonHapusAreaPSp;
    private javax.swing.JButton buttonSimpan;
    private javax.swing.JButton buttonTambahAreaPSp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> listPSPAreas;
    private javax.swing.JPanel panelCitraOriginal;
    private javax.swing.JPanel panelCitraProcessed;
    private javax.swing.JSlider sliderPoint1;
    private javax.swing.JSlider sliderPoint2;
    // End of variables declaration//GEN-END:variables
}
